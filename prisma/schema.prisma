generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model app_user {
  id               Int                @id @default(autoincrement())
  first_name       String
  last_name        String
  email            String             @unique
  uid              String?
  address          address[]
  cart             cart[]
  checkout_session checkout_session[]
  order            order[]
}

model cart {
  id               Int                @id @default(autoincrement())
  user_id          Int
  num_items        Int                @default(0)
  total            Decimal            @default(0) @db.Decimal(7, 2)
  subtotal         Decimal            @default(0) @db.Decimal(7, 2)
  taxes            Decimal            @default(0) @db.Decimal(7, 2)
  app_user         app_user           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  cart_product     cart_product[]
  checkout_session checkout_session[]
}

model cart_product {
  product_id Int
  cart_id    Int
  quantity   Int     @default(1)
  cart       cart    @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product    product @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([product_id, cart_id])
}

model order {
  id                      Int             @id @default(autoincrement())
  user_id                 Int
  order_date              DateTime        @default(dbgenerated("(now())::date")) @db.Date
  total                   Decimal         @db.Decimal(7, 2)
  subtotal                Decimal         @db.Decimal(7, 2)
  taxes                   Decimal         @db.Decimal(7, 2)
  num_items               Int
  shipping_street_address String
  shipping_unit           String
  shipping_city           String
  shipping_province       String
  shipping_country        String
  shipping_postal_code    String
  shipping_phone_number   String
  billing_street_address  String
  billing_unit            String
  billing_city            String
  billing_province        String
  billing_country         String
  billing_postal_code     String
  billing_phone_number    String
  app_user                app_user        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order_product           order_product[]
}

model order_product {
  order_id   Int
  product_id Int
  quantity   Int
  order      order   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product    product @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([order_id, product_id])
}

model product {
  id               Int             @id @default(autoincrement())
  name             String
  description      String
  inventory        Int             @default(0)
  price            Decimal         @db.Decimal
  category_code    String
  discount_type    String          @default("none")
  total_sold       Int             @default(0)
  img_url          String
  discount_percent Int             @default(0)
  item_code        String          @unique
  cart_product     cart_product[]
  order_product    order_product[]
}

model session {
  sid    String   @id @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}

model address {
  id               Int                @id @default(autoincrement())
  first_name       String
  last_name        String
  address          String
  city             String
  province         String
  country          String
  postal_code      String
  phone_number     String
  address_type     String
  user_id          Int
  unit             String?
  app_user         app_user           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  checkout_session checkout_session[]
}

model checkout_session {
  id                  Int      @id @default(autoincrement())
  user_id             Int
  shipping_address_id Int?
  cart_id             Int
  stage               String   @default("shipping")
  billing_address_id  Int?
  cart                cart     @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  address             address? @relation(fields: [shipping_address_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  app_user            app_user @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
